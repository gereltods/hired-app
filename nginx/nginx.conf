worker_processes 4;

events { worker_connections 1024; }

http {

    keepalive_timeout 256;
    send_timeout 40;
    client_body_timeout 40;
    client_header_timeout 40;
    server_tokens off;
    charset utf-8;
	client_max_body_size 10M;
    
	access_log  off;
	
	upstream node-app {
      ip_hash; #least_conn;
	    server api1:2999 weight=10 max_fails=0 fail_timeout=30s;
	    server api2:2999 weight=5 max_fails=0 fail_timeout=30s;
	}

	server {
		listen 8080;
		
		location / {
			add_header "Access-Control-Allow-Credentials" "true";
			add_header "Access-Control-Allow-Header" "Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,x-api-role,X-Total-Count";
			add_header "Access-Control-Allow-Header" "*";
			add_header "Access-Control-Allow-Methods" "GET,POST,OPTIONS,PUT,DELETE,PATCH";	
			
			add_header Pragma "no-cache";
    	    add_header Cache-Control "no-store, no-cache, must-revalidate,  post-check=0, pre-check=0";
			
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-NginX-Proxy true;
			proxy_pass http://node-app/;
			proxy_set_header Host $host;
			proxy_redirect off;
			   	    
		}
	}
}
